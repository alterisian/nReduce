.row
  .span3= link_to 'All Companies', demo_day_index_path, :class => 'btn'
  .span6
    %center
      %h1 #{@startup.name}
  .span3
%hr/

.row
  .span6
    #streamsContainer
    - if @owner
      :javascript
        var publisher;
        function sessionConnectedHandler(event) {
          // Put my webcam in a div
          var publishProps = {width:500, height:315};
          publisher = TB.initPublisher(apiKey, 'streamsContainer', publishProps);
          // Send my stream to the session
          session.publish(publisher);

          // Record Session
          // session.startRecording()
        }
    - else
      :javascript
        function sessionConnectedHandler(event) {
          console.log(event.streams);
          for (var i = 0; i < event.streams.length; i++) {
            var stream = event.streams[i];
            displayStream(stream);
          }
          streams = event.streams;
        }

        function displayStream(stream) {
          var div = document.createElement('div');
          div.setAttribute('id', 'stream' + stream.streamId);
          var streamsContainer = document.getElementById('streamsContainer');
          streamsContainer.appendChild(div);
          var divProps = {width: 500, height:315};
          subscriber = session.subscribe(stream, 'stream' + stream.streamId, divProps);
        }

    :javascript
      // Tokbox chat
      // http://www.tokbox.com/opentok/api/documentation/gettingstarted
      var apiKey = '#{Settings.apis.tokbox.key}';
      var sessionId = '#{@tokbox_session_id}';
      var token = '#{@tokbox_token}';        
       
      TB.setLogLevel(TB.DEBUG);     

      var session = TB.initSession(sessionId);    
      session.addEventListener('sessionConnected', sessionConnectedHandler);
      session.connect(apiKey, token);

      // Start polling for questions
      var lastPolledAt = new Date();

      function loadQuestions(){
        last = lastPolledAt.toISOString();
        $.get('#{startup_questions_path(@startup)}.js?last=' + last);
        lastPolledAt = new Date();
        setTimeout(function(){
          loadQuestions();
        }, 10000);
      }

      loadQuestions();
      

  .span6
    %h4 Current Question:
    .current_question
      - unless @current_question.blank?
        = render 'questions/current_question'

%h3= link_to 'Ask a question!', '#', :onclick => "$('.questions_modal').modal('show'); return false;"

%br/

.tabbable
  %ul.nav.nav-tabs
    %li.active
      %a{:href => '#questions', 'data-toggle' => 'tab'} Questions
    %li
      %a{:href => '#profile', 'data-toggle' => 'tab'} Startup Profile
  .tab-content
    .tab-pane.active#questions
      .questions
        = render 'questions/list'
    .tab-pane#profile
      [ startup profile ]

.modal.questions_modal.hide
  .modal-header
    %button.close{:type => 'button', 'data-dismiss' => 'modal'} x
    %h2{:style => 'margin-bottom: 5px'} Ask a question
  .modal-body
    .question_form
      = render 'questions/form'