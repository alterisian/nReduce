- is_owner = (user_signed_in? and (comment.user_id.to_s == current_user.id.to_s)) ? true : false
- if comment.original_post? && comment.original.present? && comment != comment.original
  - repost = comment
  - comment = comment.original
- else
  - repost = nil
= div_for comment, :class => comment.original_post? ? 'post' : 'comment' do
  -# This is a watercooler post
  - if comment.original_post?
    .right{:style => 'padding-top: 8px;'}
      .left!= render_awesome_button(comment)
    .left.pic
      - title = comment.user.name + (!comment.user.twitter.blank? ? " - @#{comment.user.twitter}" : '')
      %div= link_to image_tag(user_avatar_url(comment.user, :square), :style => 'width: 100px; height: 100px;', :title => title), user_path(comment.user)
    .left
      .content= auto_link(simple_format(comment.content), :html => { :target => '_blank' }){ |text| truncate(text, :length => 30) }
      -# This is a repost
      - if repost.present?
        - originator = comment.user
        = link_to truncate(originator.name, :length => 20), user_path(originator)
        &nbsp;•&nbsp;
        Shared by
        = link_to (is_owner ? 'You' : truncate(repost.user.name, :length => 20)), user_path(repost.user)
      - else
        = link_to "#{is_owner ? 'You' : truncate(comment.user.name, :length => 20)}", user_path(comment.user)
      - if comment.user.roles?(:mentor) or comment.user.roles?(:nreduce_mentor)
        &nbsp;•&nbsp;Mentor
      - elsif !comment.user.startup_id.blank?
        &nbsp;•&nbsp;
        = link_to comment.user.startup.name, startup_path(comment.user.startup)
      •
      %span.time= link_to "#{time_ago_in_words(comment.created_at)} ago", "#comment_#{comment.id}"
      - unless comment.awesome_count == 0
        •
        %strong= pluralize(comment.awesome_count, 'like')
      •
      = link_to 'Reply', post_path(comment)
      - if is_owner
        &nbsp;•&nbsp;
        = link_to 'Edit', edit_comment_path(comment), :remote => true
        &nbsp;•&nbsp;
        %strong= link_to 'x', comment, :method => :delete, :remote => true, :confirm => "Are you sure you want to delete the #{comment.original_post? ? 'post' : 'comment'}?"
      - else
        &nbsp;•&nbsp;
        = link_to 'Share', repost_post_path(comment), :method => :post
      - unless comment.responder_ids.blank?
        %div
          - comment.responders.each do |u|
            .left= image_tag user_avatar_url(u)
          .clear
    .clear
    -# This is just a regular comment (on a checkin or post)
  - else
    - if comment.deleted?
      %i Comment was deleted
    - else
      .left.pic
        - title = comment.user.name + (!comment.user.twitter.blank? ? " - @#{comment.user.twitter}" : '')
        %div= link_to image_tag(user_avatar_url(comment.user, :square), :style => 'width: 100px; height: 100px;', :title => title), user_path(comment.user)
      .left
        Written by
        = link_to "#{is_owner ? 'You' : truncate(comment.user.name, :length => 20)}", user_path(comment.user)
        - if comment.user.roles?(:mentor) or comment.user.roles?(:nreduce_mentor)
          &nbsp;•&nbsp;Mentor
        - elsif !comment.user.startup_id.blank?
          of Team 
          = link_to comment.user.startup.name, startup_path(comment.user.startup)
        
        - unless comment.awesome_count == 0
          %strong= pluralize(comment.awesome_count, 'like')
        .content{:style=> 'color: #3697D5; font-weight: bold;'}= simple_format(h(comment.content))
        = link_to 'Reply', reply_to_comment_path(comment), :remote => true
        - if is_owner
          &nbsp;•&nbsp;
          = link_to 'Edit', edit_comment_path(comment), :remote => true
          &nbsp;•&nbsp;
          %strong= link_to 'x', comment, :method => :delete, :remote => true, :confirm => "Are you sure you want to delete the #{comment.original_post? ? 'post' : 'comment'}?"
        .right
          %span.time Written #{time_ago_in_words(comment.created_at)} ago.
    .clear
