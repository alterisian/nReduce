- if @before_disabled == true
  - if @checkin.submitted?
    %h4 'Before' Submitted #{@checkin.submitted_at.to_s(:short)}
- else
  - unless @hide_time
    .control-group
      %strong You have #{verbose_distance_until_time_from_now(Checkin.next_before_checkin)} to make any changes
  .control-group{error_css(@checkin, :start_focus)}
    = f.label :start_focus, "This week's focus", :maxlength => 255, :class => 'control-label'
    .controls
      = f.text_field :start_focus, :class => "span4", :placeholder => "Create a 'mouse' prototype"
      = f.semantic_errors :start_focus

  .control-group{error_css(@checkin, :start_comments)}
    = f.label :start_comments, "Why?", :class => 'control-label'
    .controls
      = f.text_area :start_comments, :size => '120x4', :class => "span4", :placeholder => "Because we want people to have a strong emotional connection with their computers, and we want to test if this device will do so."
      = f.semantic_errors :start_comments

  .control-group{error_css(@checkin, :start_video_url)}
    = f.label :start_video_url, "'Before' Video URL", :class => 'control-label'
    .controls
      = f.text_field :start_video_url, :class => "span4", :placeholder => 'http://www.youtube.com/watch?v=088YM4pB9lM'
      %span.help-inline Unlisted Youtube URL
      = f.semantic_errors :start_video_url

- if @after_disabled == true
  - if @checkin.completed?
    %h4 'After' Submitted #{@checkin.completed_at.to_s(:short)}
- else
  - unless @hide_time
    .control-group
      %strong You have #{verbose_distance_until_time_from_now(Checkin.next_after_checkin)} to make any changes

  .control-group
    = label_tag 'startup', 'Startup Status', :class => 'control-label'
    .controls
      = hidden_field_tag 'startup[launched]', @checkin.startup.launched?, :id => 'launched_field'
      %h3
        .launched{:class => @checkin.startup.launched? ? '' : 'hide'}
          Launched
          - if @checkin.startup.launched?
            %span{:style => 'font-size: .7em; font-weight: normal;'} #{time_ago_in_words(@checkin.startup.launched_at)} ago
        .pre_launch{:class => @checkin.startup.launched? ? 'hide' : ''}
          Pre-Launch
          &nbsp;&nbsp;
          = link_to("We've Launched!", '#', :onclick => "$('#launched_field').val(1); $('.pre_launch').hide(); $('.launched').fadeIn(); return false;")

  .launched{:class => @checkin.startup.launched? ? '' : 'hide'}
    = f.fields_for :measurement do |m|
      = m.hidden_field :instrument_id, :id => 'checkin_instrument_id'
      .control-group{:style => 'margin-bottom: 0'}
        %label.control-label Primary Metric
        .controls
          %h3#instrument_name{:class => m.object.instrument.new_record? ? 'hide' : ''}= m.object.instrument.name
          - if m.object.instrument.new_record?
            #instrument_name_form
              %p
                %h3= link_to 'Choose Your Metric', '#', :onclick => "$('#instrument_modal').modal(); return false;"
                - if @checkin.startup.launched?
                  %br/
                  %i Required, since you are launched (to show traction &amp; progress)
          = f.semantic_errors :measurement

      #instrument_value{:class => m.object.instrument.new_record? ? 'hide' : ''}
        .control-group{error_css(m.object, :value)}
          = m.label :value, 'What is the current value?', :class => 'control-label'
          .controls
            = m.text_field :value, :class => "span2", :id => 'checkin_instrument_id'
            = m.semantic_errors :value

  .control-group{error_css(@checkin, :end_comments)}
    = f.label :end_comments, 'What did you accomplish?<br />What do you need help with?'.html_safe, :class => 'control-label'
    .controls
      = f.text_area :end_comments, :size => '120x4', :class => "span4"
      = f.semantic_errors :end_comments

  .control-group{error_css(@checkin, :end_video_url)}
    = f.label :end_video_url, "'After' Video URL", :class => 'control-label'
    .controls
      = f.text_field :end_video_url, :class => "span4", :placeholder => 'http://www.youtube.com/watch?v=088YM4pB9lM'
      %span.help-inline Unlisted Youtube URL
      = f.semantic_errors :end_video_url

.form-actions
  = f.submit "Submit Video", :class => "btn btn-primary btn-large"