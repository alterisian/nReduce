.row
  .span5
    .stage
      .left.number 1
      .left Video
      .clear
  .span6
    .stage
      .left.number 2
      .left Checkin
      .clear

- if @before_disabled == true
  - if @checkin.submitted?
    %h4 'Before' Submitted
- else
  = hidden_field_tag 'checkin_type', 'before', :id => 'checkin_type'

  - unless @hide_time
    .control-group
      %h3.center{:style => 'padding-top: 10px'}
        %small You have #{verbose_distance_until_time_from_now(Checkin.next_before_checkin)} to make any changes
  
  .row
    .span5
      = f.fields_for :before_video do |av|
        = render 'videos/form', :video_id => av.object.new_record? ? 'new_before_video' : "video_#{av.object.id}", :f => av
    .span1
      %p
    .span6
      .control-group{error_css(@checkin, :start_focus)}
        %p
          &nbsp
        = f.label :start_focus, "This week's focus", :maxlength => 255, :class => 'control-label'
        .controls
          = f.text_field :start_focus, :class => "span4 checkin_start_focus", :placeholder => "Create a 'mouse' prototype"
          = f.semantic_errors :start_focus

      .control-group{error_css(@checkin, :start_comments)}
        = f.label :start_comments, "Why?", :class => 'control-label'
        .controls
          = f.text_area :start_comments, :size => '120x4', :class => "span4 checkin_start_comments", :placeholder => "Because we want people to have a strong emotional connection with their computers, and we want to test if this device will do so."
          = f.semantic_errors :start_comments

- if @after_disabled == true
  - if @checkin.completed?
    %h4 'After' Submitted
- else
  = hidden_field_tag 'checkin_type', 'after', :id => 'checkin_type'
  
  - unless @hide_time
    %h3.center{:style => 'padding-top: 10px'}
      %small You have #{verbose_distance_until_time_from_now(Checkin.next_after_checkin)} to make any changes
  .row
    .span5
      = f.fields_for :after_video do |av|
        = render 'videos/form', :video_id => av.object.new_record? ? 'new_after_video' : "video_#{av.object.id}", :f => av
    .span1
      %p
    .span6
      %p.center{:style => 'padding-top: 30px;'} Last Week's Goal:
      %h1.center{:style => 'font-size: 30px'}= h(@checkin.start_focus)
      %h3{:style => 'padding-top: 40px'} Did you accomplish your goal?
      .control-group{error_css(@checkin, :accomplished)}
        .controls
          = f.radio_button :accomplished, true, :class => 'checkin_accomplished'
          Yes
          &nbsp;&nbsp;
          = f.radio_button :accomplished, false, :class => 'checkin_accomplished'
          No
          = f.semantic_errors :accomplished
      
      .control-group{:class => @checkin.startup.launched? ? 'hide' : ''}
        = label_tag 'startup', 'Startup Status', :class => 'control-label'
        .controls
          = hidden_field_tag 'startup[launched]', @checkin.startup.launched?, :id => 'launched_field'
          %h3
            .launched{:class => @checkin.startup.launched? ? '' : 'hide'}
              Launched
              - if @checkin.startup.launched?
                %span{:style => 'font-size: .7em; font-weight: normal;'} #{time_ago_in_words(@checkin.startup.launched_at)} ago
            .pre_launch
              Pre-Launch
              &nbsp;&nbsp;
              = link_to("We've Launched!", '#', :onclick => "$('#launched_field').val(1); $('.pre_launch').hide(); $('.launched').fadeIn(); return false;")

      .launched{:class => @checkin.startup.launched? ? '' : 'hide'}
        = f.fields_for :measurement do |m|
          = m.hidden_field :instrument_id, :id => 'checkin_instrument_id'
          .control-group{:style => 'margin-bottom: 0'}
            .controls
              %h3#instrument_name{:class => m.object.instrument.new_record? ? 'hide' : ''}= m.object.instrument.name
              - if m.object.instrument.new_record?
                #instrument_name_form
                  %p
                    %h3= link_to 'Choose Your Metric', '#', :onclick => "$('#instrument_modal').modal(); return false;"
                    - if @checkin.startup.launched?
                      %br/
                      %i Required, since you are launched (to show traction &amp; progress)
              = f.semantic_errors :measurement

          #instrument_value{:class => m.object.instrument.new_record? ? 'hide' : ''}
            .control-group{error_css(m.object, :value)}
              .controls
                = m.text_field :value, :class => "span2", :id => 'checkin_instrument_id'
                %span.help-text (Past Week)
                = m.semantic_errors :value

      .control-group{error_css(@checkin, :end_comments)}
        %h3 How can your fellow nReducers help you?
        .controls
          = f.text_area :end_comments, :size => '120x4', :class => "span4", :class => 'checkin_end_comments'
          = f.semantic_errors :end_comments

.form-controls.center{:style => 'margin-bottom: 20px; padding-right: 80px'}
  %p{:style => 'padding-top: 10px'}
    &nbsp
  = f.submit "Submit Checkin", :class => "btn btn-success btn-large submit disabled"