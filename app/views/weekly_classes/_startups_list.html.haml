- c = 0
- displayed_line = false
- @startups.each do |s|
  - this_startup_url = mini_profile_startup_path(s)
  - logo_path = s.logo_url(:square)
  - owner = (s.id == current_user.startup_id ? true : false)
  - num_connections = s.connected_to_ids.size
  -# Show line demarcating completed and not completed teams
  - if !displayed_line && s.profile_completeness_percent < 1.0
    .clear
    %hr/
    %center
      %h3{:style => 'padding: 10px 0 10px 0'} The below teams need to complete their profile before you can connect with them:
    %hr/
    %br/
    - displayed_line = true
    - c = 0
  - elsif c % 4 == 0 && c != 0
    .clear
  - c += 1
  .team.left{:align => 'center', :style => 'width: 270px'}
    .top{:align => 'center', :onclick => "$.get('#{this_startup_url}'); return false;"}
      .background{:style => "background-image: url('#{logo_path}'); cursor: pointer;"} &nbsp;
      - unless s.profile_completeness_percent == 1.0
        .status
          .progress{:align => 'left'}
            .bar{:style => "width: #{(s.profile_completeness_percent * 100).round}%"}
      .members{:align => 'center'}
        - if @team_members[s.id].present?
          - @team_members[s.id].shuffle.first(3).each do |tm|
            .inline-block{:style => 'margin-left: 4px'}= image_tag(user_avatar_url(tm), :title => tm.name, :style => 'width: 50px; height: 50px;')
    .bottom{:align => 'center'}
      %h3= link_to owner ? 'You' : truncate(s.name, :length => 20), this_startup_url, :target => '_blank', :remote => true
      // Don't show relationships if they haven't completed profile or this is their startup
      - if !owner && s.profile_completeness_percent == 1.0 && current_user.profile_completeness_percent == 1.0
        - if @pending_relationships_by_startup[s.id].present?
          = link_to 'Pending Request', '#', :class => 'btn disabled'
        - else
          .relationship
          - relationship = @relationships_by_startup[s.id]
          - entity = @startup
          - connected_with = s
          - form_id = "relationship_#{connected_with.obj_str}"
          %div{:id => "#{form_id}_details"}
            - if (!relationship.blank? and relationship.approved?) #|| entity.connected_to?(connected_with)
              - if !relationship.blank?
                = link_to '<i class="icon icon-remove"></i> Remove Connection'.html_safe, reject_relationship_path(:id => relationship.id), :method => :destroy, :class => 'btn', :confirm => "Are you sure you want to remove #{connected_with.name} as a connection?", :remote => true
              - else
                = link_to 'View Profile', connected_with, :class => 'btn btn-large', :style => 'margin-bottom: 12px'
            - elsif !relationship.blank? and relationship.pending?
              / This is the person being requested
              - if relationship.connected_with == entity
                = link_to '<i class="icon-remove"></i> Ignore'.html_safe, reject_relationship_path(relationship), :class => 'btn btn-large', :method => :post, :remote => true
                &nbsp;&nbsp;
                = link_to '<i class="icon-ok icon-white"></i> Approve Request'.html_safe, approve_relationship_path(relationship), :class => 'btn btn-large btn-success', :method => :post, :remote => true
              - else # This is the person who initiated
                = link_to '<i class="icon-remove"></i> Cancel Request'.html_safe, reject_relationship_path(relationship), :class => 'btn btn-large', :method => :post, :remote => true
            - elsif !relationship.blank? and relationship.suggested?
              /= link_to '<i class="icon-refresh"></i> Pass'.html_safe, reject_relationship_path(relationship), :class => 'btn btn-large', :method => :post
              /&nbsp;&nbsp;
              = link_to '<i class="icon-ok icon-white"></i> Connect'.html_safe, '#', :onclick => "$('##{form_id}').modal(); return false;", :class => 'btn btn-large btn-success'
            - elsif user_signed_in? # and Relationship.can_connect?(entity, connected_with)
              = link_to 'Connect', '#', :onclick => "$('##{form_id}').modal(); return false;", :class => 'btn btn-large btn-info'
            - relationship ||= Relationship.new(:entity => entity, :connected_with => connected_with)
            / Clear out message if it's a suggested relationship
            - relationship.message = nil if relationship && relationship.suggested?
          .modal.relationship_request.hide{:id => form_id, :align => 'left'}
            .modal-header
              %button.close{:type => 'button', 'data-dismiss' => 'modal'} x
              %h3 Connect with #{connected_with.name}
            .modal-body
              = form_for relationship, :url => (relationship.new_record? ? {:controller => :relationships, :action => :create} : approve_relationship_path(relationship)), :remote => true, :html => {:id => form_id, :class => 'form-horizontal', :method => :post} do |f|
                = f.hidden_field :entity_id
                = f.hidden_field :entity_type
                = f.hidden_field :connected_with_id
                = f.hidden_field :connected_with_type
                - unless relationship.context.blank?
                  = hidden_field_tag 'relationship[context]', relationship.context.to_s
                %p Please write a quick message to explain why you think they would be a great match for your startup?
                = f.text_area :message, :size => '120x5', :class => 'span4'
                %br/
                %br/
                = f.submit 'Connect', :class => 'btn btn-info btn-large'
      - if num_connections > 0
        %p{:style => 'font-size: .9em'} #{pluralize(num_connections, 'connection')}